// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 50;
	objects = {

/* Begin PBXBuildFile section */
		8114AA6D25E3425900E33E42 /* 766. 托普利茨矩阵.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8114AA6C25E3425900E33E42 /* 766. 托普利茨矩阵.swift */; };
		811D6F6B256A62920034D56B /* 242. 有效的字母异位词.swift in Sources */ = {isa = PBXBuildFile; fileRef = 811D6F6A256A62920034D56B /* 242. 有效的字母异位词.swift */; };
		811D6F6E256B28CA0034D56B /* 452. 用最少数量的箭引爆气球.swift in Sources */ = {isa = PBXBuildFile; fileRef = 811D6F6D256B28CA0034D56B /* 452. 用最少数量的箭引爆气球.swift */; };
		811D6F72256C78A00034D56B /* 222. 完全二叉树的节点个数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 811D6F71256C78A00034D56B /* 222. 完全二叉树的节点个数.swift */; };
		81263362256DCBF5007749B8 /* 1370. 上升下降字符串.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81263361256DCBF5007749B8 /* 1370. 上升下降字符串.swift */; };
		81263365256F1E81007749B8 /* 164. 最大间距.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81263364256F1E81007749B8 /* 164. 最大间距.swift */; };
		8126336825707102007749B8 /* 454. 四数相加 II.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8126336725707102007749B8 /* 454. 四数相加 II.swift */; };
		812DC86F25DF6811000E5840 /* 1004. 最大连续1的个数 III .swift in Sources */ = {isa = PBXBuildFile; fileRef = 812DC86E25DF6811000E5840 /* 1004. 最大连续1的个数 III .swift */; };
		812DC87325DFC6DD000E5840 /* 566. 重塑矩阵.swift in Sources */ = {isa = PBXBuildFile; fileRef = 812DC87225DFC6DD000E5840 /* 566. 重塑矩阵.swift */; };
		812DC87625DFD6C3000E5840 /* 561. 数组拆分 I.swift in Sources */ = {isa = PBXBuildFile; fileRef = 812DC87525DFD6C3000E5840 /* 561. 数组拆分 I.swift */; };
		812DC87925E0DBA2000E5840 /* 697. 数组的度.swift in Sources */ = {isa = PBXBuildFile; fileRef = 812DC87825E0DBA2000E5840 /* 697. 数组的度.swift */; };
		8130A464259F79970076BC82 /* 605. 种花问题.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8130A463259F79970076BC82 /* 605. 种花问题.swift */; };
		8130A467259F8C7D0076BC82 /* 239. 滑动窗口最大值.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8130A466259F8C7D0076BC82 /* 239. 滑动窗口最大值.swift */; };
		81313C3925C4654200179AE4 /* 1631. 最小体力消耗路径.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81313C3825C4654200179AE4 /* 1631. 最小体力消耗路径.swift */; };
		813515B225A3758E00DAB7DA /* 830. 较大分组的位置.swift in Sources */ = {isa = PBXBuildFile; fileRef = 813515B125A3758E00DAB7DA /* 830. 较大分组的位置.swift */; };
		8135161325A9D11900DAB7DA /* 123. 买卖股票的最佳时机 III.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8135161225A9D11900DAB7DA /* 123. 买卖股票的最佳时机 III.swift */; };
		813FAF7E25890E7D00892072 /* 738. 单调递增的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = 813FAF7D25890E7D00892072 /* 738. 单调递增的数字.swift */; };
		81435BEB25E20DD800C751A2 /* 415. 字符串相加.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81435BEA25E20DD800C751A2 /* 415. 字符串相加.swift */; };
		81435BEE25E2120300C751A2 /* 1389. 按既定顺序创建目标数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81435BED25E2120300C751A2 /* 1389. 按既定顺序创建目标数组.swift */; };
		8151A933258F9F7D004AF4DF /* 316. 去除重复字母.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8151A932258F9F7D004AF4DF /* 316. 去除重复字母.swift */; };
		8151A93B2594E17D004AF4DF /* 135. 分发糖果.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8151A93A2594E17D004AF4DF /* 135. 分发糖果.swift */; };
		816209402557F992000C31B0 /* 122. 买卖股票的最佳时机 II.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8162093F2557F992000C31B0 /* 122. 买卖股票的最佳时机 II.swift */; };
		81650D21239F43E400580543 /* 621-任务调度器.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81650D20239F43E400580543 /* 621-任务调度器.swift */; };
		81654A2A25351C3400848BEF /* 24. 两两交换链表中的节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81654A2925351C3400848BEF /* 24. 两两交换链表中的节点.swift */; };
		81654A2D25366BDD00848BEF /* 1002. 查找常用字符.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81654A2C25366BDD00848BEF /* 1002. 查找常用字符.swift */; };
		816F1B9E254D797700D0EE5D /* 381. O(1) 时间插入、删除和获取随机元素 - 允许重复.swift in Sources */ = {isa = PBXBuildFile; fileRef = 816F1B9D254D797700D0EE5D /* 381. O(1) 时间插入、删除和获取随机元素 - 允许重复.swift */; };
		817CEAEF2561E2D400105A26 /* 406. 根据身高重建队列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 817CEAEE2561E2D400105A26 /* 406. 根据身高重建队列.swift */; };
		817CEAF22561F7DB00105A26 /* 12. 整数转罗马数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = 817CEAF12561F7DB00105A26 /* 12. 整数转罗马数字.swift */; };
		817CEAF52561FA9600105A26 /* 13. 罗马数字转整数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 817CEAF42561FA9600105A26 /* 13. 罗马数字转整数.swift */; };
		817CEAF8256417DD00105A26 /* 1030. 距离顺序排列矩阵单元格.swift in Sources */ = {isa = PBXBuildFile; fileRef = 817CEAF7256417DD00105A26 /* 1030. 距离顺序排列矩阵单元格.swift */; };
		817CEAFB256498FC00105A26 /* 134. 加油站 .swift in Sources */ = {isa = PBXBuildFile; fileRef = 817CEAFA256498FC00105A26 /* 134. 加油站 .swift */; };
		817CEAFE2565DC4500105A26 /* 283. 移动零.swift in Sources */ = {isa = PBXBuildFile; fileRef = 817CEAFD2565DC4500105A26 /* 283. 移动零.swift */; };
		818A1C052583C9E300692E2A /* 649. Dota2 参议院.swift in Sources */ = {isa = PBXBuildFile; fileRef = 818A1C042583C9E300692E2A /* 649. Dota2 参议院.swift */; };
		818BEF3C23A1EF6E00382977 /* 1169-查询无效交易.swift in Sources */ = {isa = PBXBuildFile; fileRef = 818BEF3B23A1EF6E00382977 /* 1169-查询无效交易.swift */; };
		818BEF3E23A22B5600382977 /* Common.swift in Sources */ = {isa = PBXBuildFile; fileRef = 818BEF3D23A22B5600382977 /* Common.swift */; };
		818BEF4023A22B8200382977 /* 109-有序链表转换二叉搜索树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 818BEF3F23A22B8200382977 /* 109-有序链表转换二叉搜索树.swift */; };
		818BEF4523A33E2200382977 /* 889-根据前序和后序遍历构造二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 818BEF4423A33E2200382977 /* 889-根据前序和后序遍历构造二叉树.swift */; };
		818BEF4723A363A500382977 /* 796-旋转字符串.swift in Sources */ = {isa = PBXBuildFile; fileRef = 818BEF4623A363A500382977 /* 796-旋转字符串.swift */; };
		818BEF4923A377C700382977 /* 682-棒球比赛.swift in Sources */ = {isa = PBXBuildFile; fileRef = 818BEF4823A377C700382977 /* 682-棒球比赛.swift */; };
		818EF0C5258BB3B60066399D /* 714. 买卖股票的最佳时机含手续费.swift in Sources */ = {isa = PBXBuildFile; fileRef = 818EF0C4258BB3B60066399D /* 714. 买卖股票的最佳时机含手续费.swift */; };
		81949E0D24D7B7AB00823823 /* 1041-困于环中的机器人.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81949E0C24D7B7AB00823823 /* 1041-困于环中的机器人.swift */; };
		819A1E3725E48298009D2511 /* 1052. 爱生气的书店老板.swift in Sources */ = {isa = PBXBuildFile; fileRef = 819A1E3625E48298009D2511 /* 1052. 爱生气的书店老板.swift */; };
		819A1E3A25E5CAB8009D2511 /* 832. 翻转图像.swift in Sources */ = {isa = PBXBuildFile; fileRef = 819A1E3925E5CAB8009D2511 /* 832. 翻转图像.swift */; };
		81A54D9423A729F000EE2CCC /* 665-非递减数列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54D9323A729F000EE2CCC /* 665-非递减数列.swift */; };
		81A54D9623A745B500EE2CCC /* 4-寻找两个有序数组的中位数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54D9523A745B500EE2CCC /* 4-寻找两个有序数组的中位数.swift */; };
		81A54D9823A8752D00EE2CCC /* 6-Z 字形变换.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54D9723A8752D00EE2CCC /* 6-Z 字形变换.swift */; };
		81A54DC623A9D53C00EE2CCC /* 309-最佳买卖股票时机含冷冻期.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54DC523A9D53C00EE2CCC /* 309-最佳买卖股票时机含冷冻期.swift */; };
		81A54E3423AB154F00EE2CCC /* 303-区域和检索 - 数组不可变.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54E3323AB154F00EE2CCC /* 303-区域和检索 - 数组不可变.swift */; };
		81A54E3623AB502C00EE2CCC /* 876-链表的中间结点.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54E3523AB502C00EE2CCC /* 876-链表的中间结点.swift */; };
		81A54E3823AB508000EE2CCC /* 977-有序数组的平方.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54E3723AB508000EE2CCC /* 977-有序数组的平方.swift */; };
		81A54E3A23AB56B200EE2CCC /* 238-除自身以外数组的乘积.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54E3923AB56B200EE2CCC /* 238-除自身以外数组的乘积.swift */; };
		81A54E3C23AC5F4E00EE2CCC /* 322-零钱兑换.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54E3B23AC5F4E00EE2CCC /* 322-零钱兑换.swift */; };
		81A54E5E23ADC6FF00EE2CCC /* 304-二维区域和检索 - 矩阵不可变.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54E5D23ADC6FF00EE2CCC /* 304-二维区域和检索 - 矩阵不可变.swift */; };
		81A54E6023ADF5BA00EE2CCC /* 213-打家劫舍 II.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54E5F23ADF5BA00EE2CCC /* 213-打家劫舍 II.swift */; };
		81A54E8723B05DAE00EE2CCC /* 413-等差数列划分.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54E8623B05DAE00EE2CCC /* 413-等差数列划分.swift */; };
		81A54E8923B05DCB00EE2CCC /* 5293-子串的最大出现次数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54E8823B05DCB00EE2CCC /* 5293-子串的最大出现次数.swift */; };
		81A54E8B23B05E0200EE2CCC /* 5292-划分数组为连续数字的集合.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54E8A23B05E0200EE2CCC /* 5292-划分数组为连续数字的集合.swift */; };
		81A54E8D23B05E2000EE2CCC /* 5291- 统计位数为偶数的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54E8C23B05E2000EE2CCC /* 5291- 统计位数为偶数的数字.swift */; };
		81A54EB823B1DD6A00EE2CCC /* 494-目标和.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54EB723B1DD6A00EE2CCC /* 494-目标和.swift */; };
		81A54EBC23B346D900EE2CCC /* 486-预测赢家.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54EBB23B346D900EE2CCC /* 486-预测赢家.swift */; };
		81A54EBE23B3484F00EE2CCC /* 1137-第 N 个泰波那契数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54EBD23B3484F00EE2CCC /* 1137-第 N 个泰波那契数.swift */; };
		81A54EC123B4490E00EE2CCC /* 1104-二叉树寻路.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54EC023B4490E00EE2CCC /* 1104-二叉树寻路.swift */; };
		81A54EC323B4577500EE2CCC /* 84-柱状图中最大的矩形.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54EC223B4577500EE2CCC /* 84-柱状图中最大的矩形.swift */; };
		81A54EC523B5A70E00EE2CCC /* 42-接雨水.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54EC423B5A70E00EE2CCC /* 42-接雨水.swift */; };
		81A54EC723B5D5EA00EE2CCC /* 496-下一个更大元素 I.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54EC623B5D5EA00EE2CCC /* 496-下一个更大元素 I.swift */; };
		81A54EC923B5DB1700EE2CCC /* 排序.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54EC823B5DB1700EE2CCC /* 排序.swift */; };
		81A54ECB23B6607E00EE2CCC /* 88-合并两个有序数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54ECA23B6607E00EE2CCC /* 88-合并两个有序数组.swift */; };
		81A54ECD23B6626A00EE2CCC /* 167-两数之和 II - 输入有序数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54ECC23B6626A00EE2CCC /* 167-两数之和 II - 输入有序数组.swift */; };
		81A54ECF23B662A500EE2CCC /* 删除链表中等于某个值得所有节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54ECE23B662A500EE2CCC /* 删除链表中等于某个值得所有节点.swift */; };
		81A54ED123B6663200EE2CCC /* 100-相同的树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54ED023B6663200EE2CCC /* 100-相同的树.swift */; };
		81A54ED323B70F6A00EE2CCC /* 60-第k个排列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A54ED223B70F6A00EE2CCC /* 60-第k个排列.swift */; };
		81A7548C25C59DBA001EDE80 /* 778. 水位上升的泳池中游泳.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A7548B25C59DBA001EDE80 /* 778. 水位上升的泳池中游泳.swift */; };
		81A7548F25C5CCB3001EDE80 /* 839. 相似字符串组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A7548E25C5CCB3001EDE80 /* 839. 相似字符串组.swift */; };
		81A7549225C70DE9001EDE80 /* 888. 公平的糖果棒交换.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81A7549125C70DE9001EDE80 /* 888. 公平的糖果棒交换.swift */; };
		81BD50B823A5C490008B2278 /* 205-同构字符串.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81BD50B723A5C490008B2278 /* 205-同构字符串.swift */; };
		81BF2CBE254642B500F2E47E /* 1365. 有多少小于当前数字的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81BF2CBD254642B500F2E47E /* 1365. 有多少小于当前数字的数字.swift */; };
		81BF2CEF254B8D3A00F2E47E /* 463. 岛屿的周长.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81BF2CEE254B8D3A00F2E47E /* 463. 岛屿的周长.swift */; };
		81C1FC43239E1D6F00F2271B /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81C1FC42239E1D6F00F2271B /* main.swift */; };
		81C1FC4B239E205E00F2271B /* 31-下一个排列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81C1FC4A239E205E00F2271B /* 31-下一个排列.swift */; };
		81C79DE125B4999100885FF1 /* 721. 账户合并.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81C79DE025B4999100885FF1 /* 721. 账户合并.swift */; };
		81C79DE425BA59AC00885FF1 /*  721. 账户合并.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81C79DE325BA59AC00885FF1 /*  721. 账户合并.swift */; };
		81C79E0725BC342200885FF1 /* 1319. 连通网络的操作次数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81C79E0625BC342200885FF1 /* 1319. 连通网络的操作次数.swift */; };
		81C79E7625BD0A9200885FF1 /* 674. 最长连续递增序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81C79E7525BD0A9200885FF1 /* 674. 最长连续递增序列.swift */; };
		81C9AAB12533D33A0007C839 /* 530. 二叉搜索树的最小绝对差.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81C9AAB02533D33A0007C839 /* 530. 二叉搜索树的最小绝对差.swift */; };
		81E1555F2550D81F00FB7360 /* 941. 有效的山脉数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81E1555E2550D81F00FB7360 /* 941. 有效的山脉数组.swift */; };
		81E1557A255222DB00FB7360 /* 57. 插入区间.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81E15579255222DB00FB7360 /* 57. 插入区间.swift */; };
		81E60E8A23A088D500AAE3EA /* 89-格雷编码.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81E60E8923A088D500AAE3EA /* 89-格雷编码.swift */; };
		81E9F2442560304C00E2F4D7 /* 1122. 数组的相对排序.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81E9F2432560304C00E2F4D7 /* 1122. 数组的相对排序.swift */; };
		81E9F2482560345300E2F4D7 /* 515. 在每个树行中找最大值.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81E9F2472560345300E2F4D7 /* 515. 在每个树行中找最大值.swift */; };
		81E9F24B25603A7100E2F4D7 /* 516. 最长回文子序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81E9F24A25603A7100E2F4D7 /* 516. 最长回文子序列.swift */; };
		81E9F6AE2558BEF500B1F198 /* 973. 最接近原点的 K 个点.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81E9F6AD2558BEF500B1F198 /* 973. 最接近原点的 K 个点.swift */; };
		81EAE67425E6B09A007DD010 /* 867. 转置矩阵.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81EAE67325E6B09A007DD010 /* 867. 转置矩阵.swift */; };
		81EAE67725E86758007DD010 /* 1178. 猜字谜.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81EAE67625E86758007DD010 /* 1178. 猜字谜.swift */; };
		81EAE67A25EB905B007DD010 /* 896. 单调数列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81EAE67925EB905B007DD010 /* 896. 单调数列.swift */; };
		81EBE6002598D01A00F8AAC0 /* 85. 最大矩形.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81EBE5FF2598D01A00F8AAC0 /* 85. 最大矩形.swift */; };
		81EBE6042598DA8E00F8AAC0 /* 659. 分割数组为连续子序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81EBE6032598DA8E00F8AAC0 /* 659. 分割数组为连续子序列.swift */; };
		81EBE6072598DCFD00F8AAC0 /* 103. 二叉树的锯齿形层序遍历.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81EBE6062598DCFD00F8AAC0 /* 103. 二叉树的锯齿形层序遍历.swift */; };
		81EBE60A259DE02E00F8AAC0 /* 435. 无重叠区间.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81EBE609259DE02E00F8AAC0 /* 435. 无重叠区间.swift */; };
		81FD32C225AADD2400774231 /* 228. 汇总区间 .swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FD32C125AADD2400774231 /* 228. 汇总区间 .swift */; };
		81FD32C525AF45DE00774231 /* 684. 冗余连接.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FD32C425AF45DE00774231 /* 684. 冗余连接.swift */; };
		81FD32C825B305D500774231 /* 803. 打砖块.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FD32C725B305D500774231 /* 803. 打砖块.swift */; };
		81FD32CC25B4133300774231 /* 1232. 缀点成线.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FD32CB25B4133300774231 /* 1232. 缀点成线.swift */; };
		81FE1FAB24C13933001765E5 /* 35-搜索插入位置.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FE1FAA24C13933001765E5 /* 35-搜索插入位置.swift */; };
		81FE1FAD24C34DC7001765E5 /* 826-安排工作以达到最大收益.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FE1FAC24C34DC7001765E5 /* 826-安排工作以达到最大收益.swift */; };
		81FF6F4623B8B04C00814D5B /* 5295-和为零的N个唯一整数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FF6F4523B8B04C00814D5B /* 5295-和为零的N个唯一整数.swift */; };
		81FF6F4823B8B2A700814D5B /* 5296-两棵二叉搜索树中的所有元素.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FF6F4723B8B2A700814D5B /* 5296-两棵二叉搜索树中的所有元素.swift */; };
		81FF6F4A23B8BEC000814D5B /* 5297-跳跃游戏 III.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FF6F4923B8BEC000814D5B /* 5297-跳跃游戏 III.swift */; };
		81FF6F4C23B9938500814D5B /* 673-最长递增子序列的个数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FF6F4B23B9938500814D5B /* 673-最长递增子序列的个数.swift */; };
		81FF6F4E23BAE70100814D5B /* 967-连续差相同的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FF6F4D23BAE70100814D5B /* 967-连续差相同的数字.swift */; };
		81FF6F5623BC5BE300814D5B /* 130-被围绕的区域.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FF6F5523BC5BE300814D5B /* 130-被围绕的区域.swift */; };
		81FF6F5923BD90A600814D5B /* 905-按奇偶排序数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FF6F5823BD90A600814D5B /* 905-按奇偶排序数组.swift */; };
		81FF6F5B23BDBAEB00814D5B /* 724-寻找数组的中心索引.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FF6F5A23BDBAEA00814D5B /* 724-寻找数组的中心索引.swift */; };
		81FF6F5D23BDCD7500814D5B /* 1093-大样本统计.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FF6F5C23BDCD7500814D5B /* 1093-大样本统计.swift */; };
		81FF6F8223C2CC5800814D5B /* 657-机器人能否返回原点.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FF6F8123C2CC5800814D5B /* 657-机器人能否返回原点.swift */; };
		81FF6F8423C2D0DF00814D5B /* 504-七进制数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FF6F8323C2D0DF00814D5B /* 504-七进制数.swift */; };
		81FF6F8623C2D2A800814D5B /* 74-搜索二维矩阵.swift in Sources */ = {isa = PBXBuildFile; fileRef = 81FF6F8523C2D2A800814D5B /* 74-搜索二维矩阵.swift */; };
		F8209DB1258CDFE100BB4A3B /* 389. 找不同.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8209DB0258CDFE100BB4A3B /* 389. 找不同.swift */; };
		F8209DBA258DD08000BB4A3B /* 48. 旋转图像.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8209DB9258DD08000BB4A3B /* 48. 旋转图像.swift */; };
		F8209E202590C68600BB4A3B /* 746. 使用最小花费爬楼梯.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8209E1F2590C68600BB4A3B /* 746. 使用最小花费爬楼梯.swift */; };
		F840C529254F9BBF008DDFC4 /* 349. 两个数组的交集.swift in Sources */ = {isa = PBXBuildFile; fileRef = F840C528254F9BBF008DDFC4 /* 349. 两个数组的交集.swift */; };
		F842E8DC25C1996B00437C0D /* 671. 二叉树中第二小的节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = F842E8DB25C1996B00437C0D /* 671. 二叉树中第二小的节点.swift */; };
		F84D776A254ABDBD00CD31E0 /* 129. 求根到叶子节点数字之和.swift in Sources */ = {isa = PBXBuildFile; fileRef = F84D7769254ABDBD00CD31E0 /* 129. 求根到叶子节点数字之和.swift */; };
		F855B61025B13381006A9D06 /* 947. 移除最多的同行或同列石头 .swift in Sources */ = {isa = PBXBuildFile; fileRef = F855B60F25B13381006A9D06 /* 947. 移除最多的同行或同列石头 .swift */; };
		F858707925B6792E00B670D7 /* 1584. 连接所有点的最小费用.swift in Sources */ = {isa = PBXBuildFile; fileRef = F858707825B6792E00B670D7 /* 1584. 连接所有点的最小费用.swift */; };
		F858715425B6EA4800B670D7 /* 200. 岛屿数量.swift in Sources */ = {isa = PBXBuildFile; fileRef = F858715325B6EA4800B670D7 /* 200. 岛屿数量.swift */; };
		F858715925B7CA9500B670D7 /* 628. 三个数的最大乘积.swift in Sources */ = {isa = PBXBuildFile; fileRef = F858715825B7CA9500B670D7 /* 628. 三个数的最大乘积.swift */; };
		F866E49325B964800076CE4E /* 1489. 找到最小生成树里的关键边和伪关键边.swift in Sources */ = {isa = PBXBuildFile; fileRef = F866E49225B964800076CE4E /* 1489. 找到最小生成树里的关键边和伪关键边.swift */; };
		F866E68A25BB1D260076CE4E /* 1283. 使结果不超过阈值的最小除数.swift in Sources */ = {isa = PBXBuildFile; fileRef = F866E68925BB1D260076CE4E /* 1283. 使结果不超过阈值的最小除数.swift */; };
		F866E68D25BE63670076CE4E /* 959. 由斜杠划分区域.swift in Sources */ = {isa = PBXBuildFile; fileRef = F866E68C25BE63670076CE4E /* 959. 由斜杠划分区域.swift */; };
		F866E69025BFAED10076CE4E /* 1128. 等价多米诺骨牌对的数量.swift in Sources */ = {isa = PBXBuildFile; fileRef = F866E68F25BFAED10076CE4E /* 1128. 等价多米诺骨牌对的数量.swift */; };
		F866E69425BFBF330076CE4E /* 1218. 最长定差子序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = F866E69325BFBF330076CE4E /* 1218. 最长定差子序列.swift */; };
		F874CED625C2BF18005B5FB8 /* 1033. 移动石子直到连续.swift in Sources */ = {isa = PBXBuildFile; fileRef = F874CED525C2BF18005B5FB8 /* 1033. 移动石子直到连续.swift */; };
		F874CF9025C8EE37005B5FB8 /* 424. 替换后的最长重复字符.swift in Sources */ = {isa = PBXBuildFile; fileRef = F874CF8F25C8EE37005B5FB8 /* 424. 替换后的最长重复字符.swift */; };
		F880C06025CE54A7000EE3CC /* 643. 子数组最大平均数 I .swift in Sources */ = {isa = PBXBuildFile; fileRef = F880C05F25CE54A7000EE3CC /* 643. 子数组最大平均数 I .swift */; };
		F880C06325CE56BB000EE3CC /* 1208. 尽可能使字符串相等.swift in Sources */ = {isa = PBXBuildFile; fileRef = F880C06225CE56BB000EE3CC /* 1208. 尽可能使字符串相等.swift */; };
		F8896D19255CEBED008E131D /* 922. 按奇偶排序数组 II.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8896D18255CEBED008E131D /* 922. 按奇偶排序数组 II.swift */; };
		F889CBA82560CE720049C446 /* 402. 移掉K位数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = F889CBA72560CE720049C446 /* 402. 移掉K位数字.swift */; };
		F889CC6B256108DD0049C446 /* 405. 数字转换为十六进制数 .swift in Sources */ = {isa = PBXBuildFile; fileRef = F889CC6A256108DD0049C446 /* 405. 数字转换为十六进制数 .swift */; };
		F889CC6E25613FE00049C446 /* 15. 三数之和.swift in Sources */ = {isa = PBXBuildFile; fileRef = F889CC6D25613FE00049C446 /* 15. 三数之和.swift */; };
		F89419C725C104FA0045B201 /* 1579. 保证图可完全遍历.swift in Sources */ = {isa = PBXBuildFile; fileRef = F89419C625C104FA0045B201 /* 1579. 保证图可完全遍历.swift */; };
		F8A49034255E30DD0045DD43 /* 328. 奇偶链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8A49033255E30DD0045DD43 /* 328. 奇偶链表.swift */; };
		F8A5920B25A2E84B00F57560 /* 641. 设计循环双端队列.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8A5920A25A2E84B00F57560 /* 641. 设计循环双端队列.swift */; };
		F8A5921825A2FD0E00F57560 /* 646. 最长数对链.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8A5921725A2FD0E00F57560 /* 646. 最长数对链.swift */; };
		F8A5923C25A31FB600F57560 /* 1614. 括号的最大嵌套深度.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8A5923B25A31FB600F57560 /* 1614. 括号的最大嵌套深度.swift */; };
		F8A5923F25A3342600F57560 /* 面试题 16.26. 计算器.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8A5923E25A3342600F57560 /* 面试题 16.26. 计算器.swift */; };
		F8A5924225A340E100F57560 /* 面试题 17.04. 消失的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8A5924125A340E100F57560 /* 面试题 17.04. 消失的数字.swift */; };
		F8A5924725A55BF100F57560 /* 399. 除法求值.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8A5924625A55BF100F57560 /* 399. 除法求值.swift */; };
		F8AB679B2553FAAA005D0EC4 /* 127. 单词接龙.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8AB679A2553FAAA005D0EC4 /* 127. 单词接龙.swift */; };
		F8AB690725554A26005D0EC4 /* 1356. 根据数字二进制下 1 的数目排序.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8AB690625554A26005D0EC4 /* 1356. 根据数字二进制下 1 的数目排序.swift */; };
		F8AF4734256790330027B3EA /* 147. 对链表进行插入排序.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8AF4733256790330027B3EA /* 147. 对链表进行插入排序.swift */; };
		F8AF47602567E58B0027B3EA /* 1324. 竖直打印单词.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8AF475F2567E58B0027B3EA /* 1324. 竖直打印单词.swift */; };
		F8AF47632568C3990027B3EA /* 148. 排序链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8AF47622568C3990027B3EA /* 148. 排序链表.swift */; };
		F8AF49CC256910B30027B3EA /* 22. 括号生成.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8AF49CB256910B30027B3EA /* 22. 括号生成.swift */; };
		F8AF49D0256B46EF0027B3EA /* 34. 在排序数组中查找元素的第一个和最后一个位置.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8AF49CF256B46EF0027B3EA /* 34. 在排序数组中查找元素的第一个和最后一个位置.swift */; };
		F8B071E3257CCC2A009B33C0 /* 118. 杨辉三角.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8B071E2257CCC2A009B33C0 /* 118. 杨辉三角.swift */; };
		F8B0724A257DC6B5009B33C0 /* 861. 翻转矩阵后的得分.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8B07249257DC6B5009B33C0 /* 861. 翻转矩阵后的得分.swift */; };
		F8B072DB257F1893009B33C0 /* 842. 将数组拆分成斐波那契序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8B072DA257F1893009B33C0 /* 842. 将数组拆分成斐波那契序列.swift */; };
		F8B072E4258067E9009B33C0 /* 62. 不同路径.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8B072E3258067E9009B33C0 /* 62. 不同路径.swift */; };
		F8B0756725811494009B33C0 /* 63. 不同路径 II.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8B0756625811494009B33C0 /* 63. 不同路径 II.swift */; };
		F8B0756A2581BBBF009B33C0 /* 860. 柠檬水找零.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8B075692581BBBF009B33C0 /* 860. 柠檬水找零.swift */; };
		F8B0793625823AC0009B33C0 /* 207. 课程表.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8B0793525823AC0009B33C0 /* 207. 课程表.swift */; };
		F8B9C906257490AD00C9696A /* 767. 重构字符串.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8B9C905257490AD00C9696A /* 767. 重构字符串.swift */; };
		F8B9C9092574997500C9696A /* 976. 三角形的最大周长.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8B9C9082574997500C9696A /* 976. 三角形的最大周长.swift */; };
		F8B9CC3D25772B9400C9696A /* 321. 拼接最大数.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8B9CC3C25772B9400C9696A /* 321. 拼接最大数.swift */; };
		F8B9CC4825787C4A00C9696A /* 204. 计数质数 .swift in Sources */ = {isa = PBXBuildFile; fileRef = F8B9CC4725787C4A00C9696A /* 204. 计数质数 .swift */; };
		F8C8F0FE25A6EF8F00E302FB /* 547. 省份数量.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8C8F0FD25A6EF8F00E302FB /* 547. 省份数量.swift */; };
		F8C8F10125A727BE00E302FB /* 396. 旋转函数.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8C8F10025A727BE00E302FB /* 396. 旋转函数.swift */; };
		F8C8F10425A7306D00E302FB /* 477. 汉明距离总和.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8C8F10325A7306D00E302FB /* 477. 汉明距离总和.swift */; };
		F8C8F10725A7F69000E302FB /* 29. 两数相除.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8C8F10625A7F69000E302FB /* 29. 两数相除.swift */; };
		F8C8F24325AC29E200E302FB /* 1202. 交换字符串中的元素.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8C8F24225AC29E200E302FB /* 1202. 交换字符串中的元素.swift */; };
		F8EDCF452589A0FD00913224 /* 290. 单词规律.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8EDCF442589A0FD00913224 /* 290. 单词规律.swift */; };
		F8F11DA22579311E00ADCCD1 /* 813. 最大平均值和的分组.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8F11DA12579311E00ADCCD1 /* 813. 最大平均值和的分组.swift */; };
		F8F870FC2547BE2E0040A8B0 /* 144. 二叉树的前序遍历.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8F870FB2547BE2E0040A8B0 /* 144. 二叉树的前序遍历.swift */; };
		F8F872A7254908C20040A8B0 /* 1207. 独一无二的出现次数.swift in Sources */ = {isa = PBXBuildFile; fileRef = F8F872A6254908C20040A8B0 /* 1207. 独一无二的出现次数.swift */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		81C1FC3D239E1D6F00F2271B /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		8114AA6C25E3425900E33E42 /* 766. 托普利茨矩阵.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "766. 托普利茨矩阵.swift"; sourceTree = "<group>"; };
		811D6F6A256A62920034D56B /* 242. 有效的字母异位词.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "242. 有效的字母异位词.swift"; sourceTree = "<group>"; };
		811D6F6D256B28CA0034D56B /* 452. 用最少数量的箭引爆气球.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "452. 用最少数量的箭引爆气球.swift"; sourceTree = "<group>"; };
		811D6F71256C78A00034D56B /* 222. 完全二叉树的节点个数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "222. 完全二叉树的节点个数.swift"; sourceTree = "<group>"; };
		81263361256DCBF5007749B8 /* 1370. 上升下降字符串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1370. 上升下降字符串.swift"; sourceTree = "<group>"; };
		81263364256F1E81007749B8 /* 164. 最大间距.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "164. 最大间距.swift"; sourceTree = "<group>"; };
		8126336725707102007749B8 /* 454. 四数相加 II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "454. 四数相加 II.swift"; sourceTree = "<group>"; };
		812DC86E25DF6811000E5840 /* 1004. 最大连续1的个数 III .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1004. 最大连续1的个数 III .swift"; sourceTree = "<group>"; };
		812DC87225DFC6DD000E5840 /* 566. 重塑矩阵.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "566. 重塑矩阵.swift"; sourceTree = "<group>"; };
		812DC87525DFD6C3000E5840 /* 561. 数组拆分 I.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "561. 数组拆分 I.swift"; sourceTree = "<group>"; };
		812DC87825E0DBA2000E5840 /* 697. 数组的度.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "697. 数组的度.swift"; sourceTree = "<group>"; };
		8130A463259F79970076BC82 /* 605. 种花问题.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "605. 种花问题.swift"; sourceTree = "<group>"; };
		8130A466259F8C7D0076BC82 /* 239. 滑动窗口最大值.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "239. 滑动窗口最大值.swift"; sourceTree = "<group>"; };
		81313C3825C4654200179AE4 /* 1631. 最小体力消耗路径.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1631. 最小体力消耗路径.swift"; sourceTree = "<group>"; };
		813515B125A3758E00DAB7DA /* 830. 较大分组的位置.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "830. 较大分组的位置.swift"; sourceTree = "<group>"; };
		8135161225A9D11900DAB7DA /* 123. 买卖股票的最佳时机 III.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "123. 买卖股票的最佳时机 III.swift"; sourceTree = "<group>"; };
		813FAF7D25890E7D00892072 /* 738. 单调递增的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "738. 单调递增的数字.swift"; sourceTree = "<group>"; };
		81435BEA25E20DD800C751A2 /* 415. 字符串相加.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "415. 字符串相加.swift"; sourceTree = "<group>"; };
		81435BED25E2120300C751A2 /* 1389. 按既定顺序创建目标数组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1389. 按既定顺序创建目标数组.swift"; sourceTree = "<group>"; };
		8151A932258F9F7D004AF4DF /* 316. 去除重复字母.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "316. 去除重复字母.swift"; sourceTree = "<group>"; };
		8151A93A2594E17D004AF4DF /* 135. 分发糖果.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "135. 分发糖果.swift"; sourceTree = "<group>"; };
		8162093F2557F992000C31B0 /* 122. 买卖股票的最佳时机 II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "122. 买卖股票的最佳时机 II.swift"; sourceTree = "<group>"; };
		81650D20239F43E400580543 /* 621-任务调度器.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "621-任务调度器.swift"; sourceTree = "<group>"; };
		81654A2925351C3400848BEF /* 24. 两两交换链表中的节点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "24. 两两交换链表中的节点.swift"; sourceTree = "<group>"; };
		81654A2C25366BDD00848BEF /* 1002. 查找常用字符.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1002. 查找常用字符.swift"; sourceTree = "<group>"; };
		816F1B9D254D797700D0EE5D /* 381. O(1) 时间插入、删除和获取随机元素 - 允许重复.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "381. O(1) 时间插入、删除和获取随机元素 - 允许重复.swift"; sourceTree = "<group>"; };
		817CEAEE2561E2D400105A26 /* 406. 根据身高重建队列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "406. 根据身高重建队列.swift"; sourceTree = "<group>"; };
		817CEAF12561F7DB00105A26 /* 12. 整数转罗马数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "12. 整数转罗马数字.swift"; sourceTree = "<group>"; };
		817CEAF42561FA9600105A26 /* 13. 罗马数字转整数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "13. 罗马数字转整数.swift"; sourceTree = "<group>"; };
		817CEAF7256417DD00105A26 /* 1030. 距离顺序排列矩阵单元格.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1030. 距离顺序排列矩阵单元格.swift"; sourceTree = "<group>"; };
		817CEAFA256498FC00105A26 /* 134. 加油站 .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "134. 加油站 .swift"; sourceTree = "<group>"; };
		817CEAFD2565DC4500105A26 /* 283. 移动零.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "283. 移动零.swift"; sourceTree = "<group>"; };
		818A1C042583C9E300692E2A /* 649. Dota2 参议院.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "649. Dota2 参议院.swift"; sourceTree = "<group>"; };
		818BEF3B23A1EF6E00382977 /* 1169-查询无效交易.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1169-查询无效交易.swift"; sourceTree = "<group>"; };
		818BEF3D23A22B5600382977 /* Common.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Common.swift; sourceTree = "<group>"; };
		818BEF3F23A22B8200382977 /* 109-有序链表转换二叉搜索树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "109-有序链表转换二叉搜索树.swift"; sourceTree = "<group>"; };
		818BEF4423A33E2200382977 /* 889-根据前序和后序遍历构造二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "889-根据前序和后序遍历构造二叉树.swift"; sourceTree = "<group>"; };
		818BEF4623A363A500382977 /* 796-旋转字符串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "796-旋转字符串.swift"; sourceTree = "<group>"; };
		818BEF4823A377C700382977 /* 682-棒球比赛.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "682-棒球比赛.swift"; sourceTree = "<group>"; };
		818EF0C4258BB3B60066399D /* 714. 买卖股票的最佳时机含手续费.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "714. 买卖股票的最佳时机含手续费.swift"; sourceTree = "<group>"; };
		81949E0C24D7B7AB00823823 /* 1041-困于环中的机器人.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1041-困于环中的机器人.swift"; sourceTree = "<group>"; };
		819A1E3625E48298009D2511 /* 1052. 爱生气的书店老板.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1052. 爱生气的书店老板.swift"; sourceTree = "<group>"; };
		819A1E3925E5CAB8009D2511 /* 832. 翻转图像.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "832. 翻转图像.swift"; sourceTree = "<group>"; };
		81A54D9323A729F000EE2CCC /* 665-非递减数列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "665-非递减数列.swift"; sourceTree = "<group>"; };
		81A54D9523A745B500EE2CCC /* 4-寻找两个有序数组的中位数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "4-寻找两个有序数组的中位数.swift"; sourceTree = "<group>"; };
		81A54D9723A8752D00EE2CCC /* 6-Z 字形变换.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "6-Z 字形变换.swift"; sourceTree = "<group>"; };
		81A54DC523A9D53C00EE2CCC /* 309-最佳买卖股票时机含冷冻期.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "309-最佳买卖股票时机含冷冻期.swift"; sourceTree = "<group>"; };
		81A54E3323AB154F00EE2CCC /* 303-区域和检索 - 数组不可变.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "303-区域和检索 - 数组不可变.swift"; sourceTree = "<group>"; };
		81A54E3523AB502C00EE2CCC /* 876-链表的中间结点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "876-链表的中间结点.swift"; sourceTree = "<group>"; };
		81A54E3723AB508000EE2CCC /* 977-有序数组的平方.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "977-有序数组的平方.swift"; sourceTree = "<group>"; };
		81A54E3923AB56B200EE2CCC /* 238-除自身以外数组的乘积.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "238-除自身以外数组的乘积.swift"; sourceTree = "<group>"; };
		81A54E3B23AC5F4E00EE2CCC /* 322-零钱兑换.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "322-零钱兑换.swift"; sourceTree = "<group>"; };
		81A54E5D23ADC6FF00EE2CCC /* 304-二维区域和检索 - 矩阵不可变.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "304-二维区域和检索 - 矩阵不可变.swift"; sourceTree = "<group>"; };
		81A54E5F23ADF5BA00EE2CCC /* 213-打家劫舍 II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "213-打家劫舍 II.swift"; sourceTree = "<group>"; };
		81A54E8623B05DAE00EE2CCC /* 413-等差数列划分.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "413-等差数列划分.swift"; sourceTree = "<group>"; };
		81A54E8823B05DCB00EE2CCC /* 5293-子串的最大出现次数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "5293-子串的最大出现次数.swift"; sourceTree = "<group>"; };
		81A54E8A23B05E0200EE2CCC /* 5292-划分数组为连续数字的集合.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "5292-划分数组为连续数字的集合.swift"; sourceTree = "<group>"; };
		81A54E8C23B05E2000EE2CCC /* 5291- 统计位数为偶数的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "5291- 统计位数为偶数的数字.swift"; sourceTree = "<group>"; };
		81A54EB723B1DD6A00EE2CCC /* 494-目标和.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "494-目标和.swift"; sourceTree = "<group>"; };
		81A54EBB23B346D900EE2CCC /* 486-预测赢家.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "486-预测赢家.swift"; sourceTree = "<group>"; };
		81A54EBD23B3484F00EE2CCC /* 1137-第 N 个泰波那契数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1137-第 N 个泰波那契数.swift"; sourceTree = "<group>"; };
		81A54EBF23B34A8800EE2CCC /* README.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
		81A54EC023B4490E00EE2CCC /* 1104-二叉树寻路.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1104-二叉树寻路.swift"; sourceTree = "<group>"; };
		81A54EC223B4577500EE2CCC /* 84-柱状图中最大的矩形.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "84-柱状图中最大的矩形.swift"; sourceTree = "<group>"; };
		81A54EC423B5A70E00EE2CCC /* 42-接雨水.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "42-接雨水.swift"; sourceTree = "<group>"; };
		81A54EC623B5D5EA00EE2CCC /* 496-下一个更大元素 I.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "496-下一个更大元素 I.swift"; sourceTree = "<group>"; };
		81A54EC823B5DB1700EE2CCC /* 排序.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "排序.swift"; sourceTree = "<group>"; };
		81A54ECA23B6607E00EE2CCC /* 88-合并两个有序数组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "88-合并两个有序数组.swift"; sourceTree = "<group>"; };
		81A54ECC23B6626A00EE2CCC /* 167-两数之和 II - 输入有序数组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "167-两数之和 II - 输入有序数组.swift"; sourceTree = "<group>"; };
		81A54ECE23B662A500EE2CCC /* 删除链表中等于某个值得所有节点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "删除链表中等于某个值得所有节点.swift"; sourceTree = "<group>"; };
		81A54ED023B6663200EE2CCC /* 100-相同的树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "100-相同的树.swift"; sourceTree = "<group>"; };
		81A54ED223B70F6A00EE2CCC /* 60-第k个排列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "60-第k个排列.swift"; sourceTree = "<group>"; };
		81A7548B25C59DBA001EDE80 /* 778. 水位上升的泳池中游泳.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "778. 水位上升的泳池中游泳.swift"; sourceTree = "<group>"; };
		81A7548E25C5CCB3001EDE80 /* 839. 相似字符串组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "839. 相似字符串组.swift"; sourceTree = "<group>"; };
		81A7549125C70DE9001EDE80 /* 888. 公平的糖果棒交换.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "888. 公平的糖果棒交换.swift"; sourceTree = "<group>"; };
		81BD50B723A5C490008B2278 /* 205-同构字符串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "205-同构字符串.swift"; sourceTree = "<group>"; };
		81BF2CBD254642B500F2E47E /* 1365. 有多少小于当前数字的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1365. 有多少小于当前数字的数字.swift"; sourceTree = "<group>"; };
		81BF2CEE254B8D3A00F2E47E /* 463. 岛屿的周长.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "463. 岛屿的周长.swift"; sourceTree = "<group>"; };
		81C1FC3F239E1D6F00F2271B /* LeetCode */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = LeetCode; sourceTree = BUILT_PRODUCTS_DIR; };
		81C1FC42239E1D6F00F2271B /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		81C1FC4A239E205E00F2271B /* 31-下一个排列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "31-下一个排列.swift"; sourceTree = "<group>"; };
		81C79DE025B4999100885FF1 /* 721. 账户合并.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "721. 账户合并.swift"; sourceTree = "<group>"; };
		81C79DE325BA59AC00885FF1 /*  721. 账户合并.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = " 721. 账户合并.swift"; sourceTree = "<group>"; };
		81C79E0625BC342200885FF1 /* 1319. 连通网络的操作次数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1319. 连通网络的操作次数.swift"; sourceTree = "<group>"; };
		81C79E7525BD0A9200885FF1 /* 674. 最长连续递增序列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "674. 最长连续递增序列.swift"; sourceTree = "<group>"; };
		81C9AAB02533D33A0007C839 /* 530. 二叉搜索树的最小绝对差.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "530. 二叉搜索树的最小绝对差.swift"; sourceTree = "<group>"; };
		81E1555E2550D81F00FB7360 /* 941. 有效的山脉数组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "941. 有效的山脉数组.swift"; sourceTree = "<group>"; };
		81E15579255222DB00FB7360 /* 57. 插入区间.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "57. 插入区间.swift"; sourceTree = "<group>"; };
		81E60E8923A088D500AAE3EA /* 89-格雷编码.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "89-格雷编码.swift"; sourceTree = "<group>"; };
		81E9F2432560304C00E2F4D7 /* 1122. 数组的相对排序.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1122. 数组的相对排序.swift"; sourceTree = "<group>"; };
		81E9F2472560345300E2F4D7 /* 515. 在每个树行中找最大值.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "515. 在每个树行中找最大值.swift"; sourceTree = "<group>"; };
		81E9F24A25603A7100E2F4D7 /* 516. 最长回文子序列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "516. 最长回文子序列.swift"; sourceTree = "<group>"; };
		81E9F6AD2558BEF500B1F198 /* 973. 最接近原点的 K 个点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "973. 最接近原点的 K 个点.swift"; sourceTree = "<group>"; };
		81EAE67325E6B09A007DD010 /* 867. 转置矩阵.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "867. 转置矩阵.swift"; sourceTree = "<group>"; };
		81EAE67625E86758007DD010 /* 1178. 猜字谜.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1178. 猜字谜.swift"; sourceTree = "<group>"; };
		81EAE67925EB905B007DD010 /* 896. 单调数列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "896. 单调数列.swift"; sourceTree = "<group>"; };
		81EBE5FF2598D01A00F8AAC0 /* 85. 最大矩形.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "85. 最大矩形.swift"; sourceTree = "<group>"; };
		81EBE6032598DA8E00F8AAC0 /* 659. 分割数组为连续子序列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "659. 分割数组为连续子序列.swift"; sourceTree = "<group>"; };
		81EBE6062598DCFD00F8AAC0 /* 103. 二叉树的锯齿形层序遍历.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "103. 二叉树的锯齿形层序遍历.swift"; sourceTree = "<group>"; };
		81EBE609259DE02E00F8AAC0 /* 435. 无重叠区间.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "435. 无重叠区间.swift"; sourceTree = "<group>"; };
		81FD32C125AADD2400774231 /* 228. 汇总区间 .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "228. 汇总区间 .swift"; sourceTree = "<group>"; };
		81FD32C425AF45DE00774231 /* 684. 冗余连接.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "684. 冗余连接.swift"; sourceTree = "<group>"; };
		81FD32C725B305D500774231 /* 803. 打砖块.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "803. 打砖块.swift"; sourceTree = "<group>"; };
		81FD32CB25B4133300774231 /* 1232. 缀点成线.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1232. 缀点成线.swift"; sourceTree = "<group>"; };
		81FE1FAA24C13933001765E5 /* 35-搜索插入位置.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "35-搜索插入位置.swift"; sourceTree = "<group>"; };
		81FE1FAC24C34DC7001765E5 /* 826-安排工作以达到最大收益.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "826-安排工作以达到最大收益.swift"; sourceTree = "<group>"; };
		81FF6F4523B8B04C00814D5B /* 5295-和为零的N个唯一整数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "5295-和为零的N个唯一整数.swift"; sourceTree = "<group>"; };
		81FF6F4723B8B2A700814D5B /* 5296-两棵二叉搜索树中的所有元素.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "5296-两棵二叉搜索树中的所有元素.swift"; sourceTree = "<group>"; };
		81FF6F4923B8BEC000814D5B /* 5297-跳跃游戏 III.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "5297-跳跃游戏 III.swift"; sourceTree = "<group>"; };
		81FF6F4B23B9938500814D5B /* 673-最长递增子序列的个数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "673-最长递增子序列的个数.swift"; sourceTree = "<group>"; };
		81FF6F4D23BAE70100814D5B /* 967-连续差相同的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "967-连续差相同的数字.swift"; sourceTree = "<group>"; };
		81FF6F5523BC5BE300814D5B /* 130-被围绕的区域.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "130-被围绕的区域.swift"; sourceTree = "<group>"; };
		81FF6F5823BD90A600814D5B /* 905-按奇偶排序数组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "905-按奇偶排序数组.swift"; sourceTree = "<group>"; };
		81FF6F5A23BDBAEA00814D5B /* 724-寻找数组的中心索引.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "724-寻找数组的中心索引.swift"; sourceTree = "<group>"; };
		81FF6F5C23BDCD7500814D5B /* 1093-大样本统计.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1093-大样本统计.swift"; sourceTree = "<group>"; };
		81FF6F8123C2CC5800814D5B /* 657-机器人能否返回原点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "657-机器人能否返回原点.swift"; sourceTree = "<group>"; };
		81FF6F8323C2D0DF00814D5B /* 504-七进制数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "504-七进制数.swift"; sourceTree = "<group>"; };
		81FF6F8523C2D2A800814D5B /* 74-搜索二维矩阵.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "74-搜索二维矩阵.swift"; sourceTree = "<group>"; };
		F8209DB0258CDFE100BB4A3B /* 389. 找不同.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "389. 找不同.swift"; sourceTree = "<group>"; };
		F8209DB9258DD08000BB4A3B /* 48. 旋转图像.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "48. 旋转图像.swift"; sourceTree = "<group>"; };
		F8209E1F2590C68600BB4A3B /* 746. 使用最小花费爬楼梯.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "746. 使用最小花费爬楼梯.swift"; sourceTree = "<group>"; };
		F840C528254F9BBF008DDFC4 /* 349. 两个数组的交集.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "349. 两个数组的交集.swift"; sourceTree = "<group>"; };
		F842E8DB25C1996B00437C0D /* 671. 二叉树中第二小的节点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "671. 二叉树中第二小的节点.swift"; sourceTree = "<group>"; };
		F84D7769254ABDBD00CD31E0 /* 129. 求根到叶子节点数字之和.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "129. 求根到叶子节点数字之和.swift"; sourceTree = "<group>"; };
		F855B60F25B13381006A9D06 /* 947. 移除最多的同行或同列石头 .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "947. 移除最多的同行或同列石头 .swift"; sourceTree = "<group>"; };
		F858707825B6792E00B670D7 /* 1584. 连接所有点的最小费用.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1584. 连接所有点的最小费用.swift"; sourceTree = "<group>"; };
		F858715325B6EA4800B670D7 /* 200. 岛屿数量.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "200. 岛屿数量.swift"; sourceTree = "<group>"; };
		F858715825B7CA9500B670D7 /* 628. 三个数的最大乘积.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "628. 三个数的最大乘积.swift"; sourceTree = "<group>"; };
		F866E49225B964800076CE4E /* 1489. 找到最小生成树里的关键边和伪关键边.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1489. 找到最小生成树里的关键边和伪关键边.swift"; sourceTree = "<group>"; };
		F866E68925BB1D260076CE4E /* 1283. 使结果不超过阈值的最小除数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1283. 使结果不超过阈值的最小除数.swift"; sourceTree = "<group>"; };
		F866E68C25BE63670076CE4E /* 959. 由斜杠划分区域.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "959. 由斜杠划分区域.swift"; sourceTree = "<group>"; };
		F866E68F25BFAED10076CE4E /* 1128. 等价多米诺骨牌对的数量.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1128. 等价多米诺骨牌对的数量.swift"; sourceTree = "<group>"; };
		F866E69325BFBF330076CE4E /* 1218. 最长定差子序列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1218. 最长定差子序列.swift"; sourceTree = "<group>"; };
		F874CED525C2BF18005B5FB8 /* 1033. 移动石子直到连续.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1033. 移动石子直到连续.swift"; sourceTree = "<group>"; };
		F874CF8F25C8EE37005B5FB8 /* 424. 替换后的最长重复字符.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "424. 替换后的最长重复字符.swift"; sourceTree = "<group>"; };
		F880C05F25CE54A7000EE3CC /* 643. 子数组最大平均数 I .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "643. 子数组最大平均数 I .swift"; sourceTree = "<group>"; };
		F880C06225CE56BB000EE3CC /* 1208. 尽可能使字符串相等.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1208. 尽可能使字符串相等.swift"; sourceTree = "<group>"; };
		F8896D18255CEBED008E131D /* 922. 按奇偶排序数组 II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "922. 按奇偶排序数组 II.swift"; sourceTree = "<group>"; };
		F889CBA72560CE720049C446 /* 402. 移掉K位数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "402. 移掉K位数字.swift"; sourceTree = "<group>"; };
		F889CC6A256108DD0049C446 /* 405. 数字转换为十六进制数 .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "405. 数字转换为十六进制数 .swift"; sourceTree = "<group>"; };
		F889CC6D25613FE00049C446 /* 15. 三数之和.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "15. 三数之和.swift"; sourceTree = "<group>"; };
		F89419C625C104FA0045B201 /* 1579. 保证图可完全遍历.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1579. 保证图可完全遍历.swift"; sourceTree = "<group>"; };
		F8A49033255E30DD0045DD43 /* 328. 奇偶链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "328. 奇偶链表.swift"; sourceTree = "<group>"; };
		F8A5920A25A2E84B00F57560 /* 641. 设计循环双端队列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "641. 设计循环双端队列.swift"; sourceTree = "<group>"; };
		F8A5921725A2FD0E00F57560 /* 646. 最长数对链.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "646. 最长数对链.swift"; sourceTree = "<group>"; };
		F8A5923B25A31FB600F57560 /* 1614. 括号的最大嵌套深度.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1614. 括号的最大嵌套深度.swift"; sourceTree = "<group>"; };
		F8A5923E25A3342600F57560 /* 面试题 16.26. 计算器.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "面试题 16.26. 计算器.swift"; sourceTree = "<group>"; };
		F8A5924125A340E100F57560 /* 面试题 17.04. 消失的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "面试题 17.04. 消失的数字.swift"; sourceTree = "<group>"; };
		F8A5924625A55BF100F57560 /* 399. 除法求值.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "399. 除法求值.swift"; sourceTree = "<group>"; };
		F8AB679A2553FAAA005D0EC4 /* 127. 单词接龙.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "127. 单词接龙.swift"; sourceTree = "<group>"; };
		F8AB690625554A26005D0EC4 /* 1356. 根据数字二进制下 1 的数目排序.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1356. 根据数字二进制下 1 的数目排序.swift"; sourceTree = "<group>"; };
		F8AF4733256790330027B3EA /* 147. 对链表进行插入排序.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "147. 对链表进行插入排序.swift"; sourceTree = "<group>"; };
		F8AF475F2567E58B0027B3EA /* 1324. 竖直打印单词.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1324. 竖直打印单词.swift"; sourceTree = "<group>"; };
		F8AF47622568C3990027B3EA /* 148. 排序链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "148. 排序链表.swift"; sourceTree = "<group>"; };
		F8AF49CB256910B30027B3EA /* 22. 括号生成.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "22. 括号生成.swift"; sourceTree = "<group>"; };
		F8AF49CF256B46EF0027B3EA /* 34. 在排序数组中查找元素的第一个和最后一个位置.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "34. 在排序数组中查找元素的第一个和最后一个位置.swift"; sourceTree = "<group>"; };
		F8B071E2257CCC2A009B33C0 /* 118. 杨辉三角.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "118. 杨辉三角.swift"; sourceTree = "<group>"; };
		F8B07249257DC6B5009B33C0 /* 861. 翻转矩阵后的得分.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "861. 翻转矩阵后的得分.swift"; sourceTree = "<group>"; };
		F8B072DA257F1893009B33C0 /* 842. 将数组拆分成斐波那契序列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "842. 将数组拆分成斐波那契序列.swift"; sourceTree = "<group>"; };
		F8B072E3258067E9009B33C0 /* 62. 不同路径.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "62. 不同路径.swift"; sourceTree = "<group>"; };
		F8B0756625811494009B33C0 /* 63. 不同路径 II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "63. 不同路径 II.swift"; sourceTree = "<group>"; };
		F8B075692581BBBF009B33C0 /* 860. 柠檬水找零.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "860. 柠檬水找零.swift"; sourceTree = "<group>"; };
		F8B0793525823AC0009B33C0 /* 207. 课程表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "207. 课程表.swift"; sourceTree = "<group>"; };
		F8B9C905257490AD00C9696A /* 767. 重构字符串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "767. 重构字符串.swift"; sourceTree = "<group>"; };
		F8B9C9082574997500C9696A /* 976. 三角形的最大周长.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "976. 三角形的最大周长.swift"; sourceTree = "<group>"; };
		F8B9CC3C25772B9400C9696A /* 321. 拼接最大数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "321. 拼接最大数.swift"; sourceTree = "<group>"; };
		F8B9CC4725787C4A00C9696A /* 204. 计数质数 .swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "204. 计数质数 .swift"; sourceTree = "<group>"; };
		F8C8F0FD25A6EF8F00E302FB /* 547. 省份数量.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "547. 省份数量.swift"; sourceTree = "<group>"; };
		F8C8F10025A727BE00E302FB /* 396. 旋转函数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "396. 旋转函数.swift"; sourceTree = "<group>"; };
		F8C8F10325A7306D00E302FB /* 477. 汉明距离总和.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "477. 汉明距离总和.swift"; sourceTree = "<group>"; };
		F8C8F10625A7F69000E302FB /* 29. 两数相除.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "29. 两数相除.swift"; sourceTree = "<group>"; };
		F8C8F24225AC29E200E302FB /* 1202. 交换字符串中的元素.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1202. 交换字符串中的元素.swift"; sourceTree = "<group>"; };
		F8EDCF442589A0FD00913224 /* 290. 单词规律.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "290. 单词规律.swift"; sourceTree = "<group>"; };
		F8F11DA12579311E00ADCCD1 /* 813. 最大平均值和的分组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "813. 最大平均值和的分组.swift"; sourceTree = "<group>"; };
		F8F870FB2547BE2E0040A8B0 /* 144. 二叉树的前序遍历.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "144. 二叉树的前序遍历.swift"; sourceTree = "<group>"; };
		F8F872A6254908C20040A8B0 /* 1207. 独一无二的出现次数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1207. 独一无二的出现次数.swift"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		81C1FC3C239E1D6F00F2271B /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		81C1FC36239E1D6F00F2271B = {
			isa = PBXGroup;
			children = (
				81A54EBF23B34A8800EE2CCC /* README.md */,
				81C1FC41239E1D6F00F2271B /* LeetCode */,
				81C1FC40239E1D6F00F2271B /* Products */,
			);
			sourceTree = "<group>";
		};
		81C1FC40239E1D6F00F2271B /* Products */ = {
			isa = PBXGroup;
			children = (
				81C1FC3F239E1D6F00F2271B /* LeetCode */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		81C1FC41239E1D6F00F2271B /* LeetCode */ = {
			isa = PBXGroup;
			children = (
				81C1FC42239E1D6F00F2271B /* main.swift */,
				81650D20239F43E400580543 /* 621-任务调度器.swift */,
				81E60E8923A088D500AAE3EA /* 89-格雷编码.swift */,
				81C1FC4A239E205E00F2271B /* 31-下一个排列.swift */,
				818BEF3B23A1EF6E00382977 /* 1169-查询无效交易.swift */,
				818BEF3D23A22B5600382977 /* Common.swift */,
				818BEF3F23A22B8200382977 /* 109-有序链表转换二叉搜索树.swift */,
				818BEF4423A33E2200382977 /* 889-根据前序和后序遍历构造二叉树.swift */,
				818BEF4623A363A500382977 /* 796-旋转字符串.swift */,
				818BEF4823A377C700382977 /* 682-棒球比赛.swift */,
				81BD50B723A5C490008B2278 /* 205-同构字符串.swift */,
				81A54D9323A729F000EE2CCC /* 665-非递减数列.swift */,
				81A54D9523A745B500EE2CCC /* 4-寻找两个有序数组的中位数.swift */,
				81A54D9723A8752D00EE2CCC /* 6-Z 字形变换.swift */,
				81A54DC523A9D53C00EE2CCC /* 309-最佳买卖股票时机含冷冻期.swift */,
				81A54E3323AB154F00EE2CCC /* 303-区域和检索 - 数组不可变.swift */,
				81A54E3523AB502C00EE2CCC /* 876-链表的中间结点.swift */,
				81A54E3723AB508000EE2CCC /* 977-有序数组的平方.swift */,
				81A54E3923AB56B200EE2CCC /* 238-除自身以外数组的乘积.swift */,
				81A54E3B23AC5F4E00EE2CCC /* 322-零钱兑换.swift */,
				81A54E5D23ADC6FF00EE2CCC /* 304-二维区域和检索 - 矩阵不可变.swift */,
				81A54E5F23ADF5BA00EE2CCC /* 213-打家劫舍 II.swift */,
				81A54E8623B05DAE00EE2CCC /* 413-等差数列划分.swift */,
				81A54E8823B05DCB00EE2CCC /* 5293-子串的最大出现次数.swift */,
				81A54E8A23B05E0200EE2CCC /* 5292-划分数组为连续数字的集合.swift */,
				81A54E8C23B05E2000EE2CCC /* 5291- 统计位数为偶数的数字.swift */,
				81A54EB723B1DD6A00EE2CCC /* 494-目标和.swift */,
				81A54EBB23B346D900EE2CCC /* 486-预测赢家.swift */,
				81A54EBD23B3484F00EE2CCC /* 1137-第 N 个泰波那契数.swift */,
				81A54EC023B4490E00EE2CCC /* 1104-二叉树寻路.swift */,
				81A54EC223B4577500EE2CCC /* 84-柱状图中最大的矩形.swift */,
				81A54EC423B5A70E00EE2CCC /* 42-接雨水.swift */,
				81A54EC623B5D5EA00EE2CCC /* 496-下一个更大元素 I.swift */,
				81A54EC823B5DB1700EE2CCC /* 排序.swift */,
				81A54ECA23B6607E00EE2CCC /* 88-合并两个有序数组.swift */,
				81A54ECC23B6626A00EE2CCC /* 167-两数之和 II - 输入有序数组.swift */,
				81A54ECE23B662A500EE2CCC /* 删除链表中等于某个值得所有节点.swift */,
				81A54ED023B6663200EE2CCC /* 100-相同的树.swift */,
				81A54ED223B70F6A00EE2CCC /* 60-第k个排列.swift */,
				81FF6F4523B8B04C00814D5B /* 5295-和为零的N个唯一整数.swift */,
				81FF6F4723B8B2A700814D5B /* 5296-两棵二叉搜索树中的所有元素.swift */,
				81FF6F4923B8BEC000814D5B /* 5297-跳跃游戏 III.swift */,
				81FF6F4B23B9938500814D5B /* 673-最长递增子序列的个数.swift */,
				81FF6F4D23BAE70100814D5B /* 967-连续差相同的数字.swift */,
				81FF6F5523BC5BE300814D5B /* 130-被围绕的区域.swift */,
				81FF6F5823BD90A600814D5B /* 905-按奇偶排序数组.swift */,
				81FF6F5A23BDBAEA00814D5B /* 724-寻找数组的中心索引.swift */,
				81FF6F5C23BDCD7500814D5B /* 1093-大样本统计.swift */,
				81FF6F8123C2CC5800814D5B /* 657-机器人能否返回原点.swift */,
				81FF6F8323C2D0DF00814D5B /* 504-七进制数.swift */,
				81FF6F8523C2D2A800814D5B /* 74-搜索二维矩阵.swift */,
				81FE1FAA24C13933001765E5 /* 35-搜索插入位置.swift */,
				81FE1FAC24C34DC7001765E5 /* 826-安排工作以达到最大收益.swift */,
				81949E0C24D7B7AB00823823 /* 1041-困于环中的机器人.swift */,
				81C9AAB02533D33A0007C839 /* 530. 二叉搜索树的最小绝对差.swift */,
				81654A2925351C3400848BEF /* 24. 两两交换链表中的节点.swift */,
				81654A2C25366BDD00848BEF /* 1002. 查找常用字符.swift */,
				81BF2CBD254642B500F2E47E /* 1365. 有多少小于当前数字的数字.swift */,
				F8F870FB2547BE2E0040A8B0 /* 144. 二叉树的前序遍历.swift */,
				81BF2CEE254B8D3A00F2E47E /* 463. 岛屿的周长.swift */,
				F8F872A6254908C20040A8B0 /* 1207. 独一无二的出现次数.swift */,
				F84D7769254ABDBD00CD31E0 /* 129. 求根到叶子节点数字之和.swift */,
				816F1B9D254D797700D0EE5D /* 381. O(1) 时间插入、删除和获取随机元素 - 允许重复.swift */,
				81E15579255222DB00FB7360 /* 57. 插入区间.swift */,
				F840C528254F9BBF008DDFC4 /* 349. 两个数组的交集.swift */,
				81E1555E2550D81F00FB7360 /* 941. 有效的山脉数组.swift */,
				F8AB679A2553FAAA005D0EC4 /* 127. 单词接龙.swift */,
				F8AB690625554A26005D0EC4 /* 1356. 根据数字二进制下 1 的数目排序.swift */,
				8162093F2557F992000C31B0 /* 122. 买卖股票的最佳时机 II.swift */,
				81E9F6AD2558BEF500B1F198 /* 973. 最接近原点的 K 个点.swift */,
				81E9F2432560304C00E2F4D7 /* 1122. 数组的相对排序.swift */,
				F8896D18255CEBED008E131D /* 922. 按奇偶排序数组 II.swift */,
				F8A49033255E30DD0045DD43 /* 328. 奇偶链表.swift */,
				81E9F2472560345300E2F4D7 /* 515. 在每个树行中找最大值.swift */,
				81E9F24A25603A7100E2F4D7 /* 516. 最长回文子序列.swift */,
				F889CBA72560CE720049C446 /* 402. 移掉K位数字.swift */,
				F889CC6A256108DD0049C446 /* 405. 数字转换为十六进制数 .swift */,
				F889CC6D25613FE00049C446 /* 15. 三数之和.swift */,
				817CEAEE2561E2D400105A26 /* 406. 根据身高重建队列.swift */,
				817CEAF12561F7DB00105A26 /* 12. 整数转罗马数字.swift */,
				817CEAF42561FA9600105A26 /* 13. 罗马数字转整数.swift */,
				F8AF4733256790330027B3EA /* 147. 对链表进行插入排序.swift */,
				817CEAF7256417DD00105A26 /* 1030. 距离顺序排列矩阵单元格.swift */,
				817CEAFA256498FC00105A26 /* 134. 加油站 .swift */,
				817CEAFD2565DC4500105A26 /* 283. 移动零.swift */,
				F8AF475F2567E58B0027B3EA /* 1324. 竖直打印单词.swift */,
				F8AF47622568C3990027B3EA /* 148. 排序链表.swift */,
				F8AF49CB256910B30027B3EA /* 22. 括号生成.swift */,
				811D6F6A256A62920034D56B /* 242. 有效的字母异位词.swift */,
				811D6F6D256B28CA0034D56B /* 452. 用最少数量的箭引爆气球.swift */,
				F8AF49CF256B46EF0027B3EA /* 34. 在排序数组中查找元素的第一个和最后一个位置.swift */,
				811D6F71256C78A00034D56B /* 222. 完全二叉树的节点个数.swift */,
				81263361256DCBF5007749B8 /* 1370. 上升下降字符串.swift */,
				81263364256F1E81007749B8 /* 164. 最大间距.swift */,
				8126336725707102007749B8 /* 454. 四数相加 II.swift */,
				F8B9C905257490AD00C9696A /* 767. 重构字符串.swift */,
				F8B9C9082574997500C9696A /* 976. 三角形的最大周长.swift */,
				F8B9CC3C25772B9400C9696A /* 321. 拼接最大数.swift */,
				F8B9CC4725787C4A00C9696A /* 204. 计数质数 .swift */,
				F8F11DA12579311E00ADCCD1 /* 813. 最大平均值和的分组.swift */,
				F8B071E2257CCC2A009B33C0 /* 118. 杨辉三角.swift */,
				F8B07249257DC6B5009B33C0 /* 861. 翻转矩阵后的得分.swift */,
				F8B072DA257F1893009B33C0 /* 842. 将数组拆分成斐波那契序列.swift */,
				F8B072E3258067E9009B33C0 /* 62. 不同路径.swift */,
				F8B0756625811494009B33C0 /* 63. 不同路径 II.swift */,
				F8B075692581BBBF009B33C0 /* 860. 柠檬水找零.swift */,
				F8B0793525823AC0009B33C0 /* 207. 课程表.swift */,
				818A1C042583C9E300692E2A /* 649. Dota2 参议院.swift */,
				813FAF7D25890E7D00892072 /* 738. 单调递增的数字.swift */,
				818EF0C4258BB3B60066399D /* 714. 买卖股票的最佳时机含手续费.swift */,
				8151A932258F9F7D004AF4DF /* 316. 去除重复字母.swift */,
				F8EDCF442589A0FD00913224 /* 290. 单词规律.swift */,
				F8209DB0258CDFE100BB4A3B /* 389. 找不同.swift */,
				F8209DB9258DD08000BB4A3B /* 48. 旋转图像.swift */,
				8151A93A2594E17D004AF4DF /* 135. 分发糖果.swift */,
				81EBE5FF2598D01A00F8AAC0 /* 85. 最大矩形.swift */,
				F8209E1F2590C68600BB4A3B /* 746. 使用最小花费爬楼梯.swift */,
				F8A5920A25A2E84B00F57560 /* 641. 设计循环双端队列.swift */,
				81EBE6032598DA8E00F8AAC0 /* 659. 分割数组为连续子序列.swift */,
				81EBE6062598DCFD00F8AAC0 /* 103. 二叉树的锯齿形层序遍历.swift */,
				81EBE609259DE02E00F8AAC0 /* 435. 无重叠区间.swift */,
				8130A463259F79970076BC82 /* 605. 种花问题.swift */,
				8130A466259F8C7D0076BC82 /* 239. 滑动窗口最大值.swift */,
				813515B125A3758E00DAB7DA /* 830. 较大分组的位置.swift */,
				8135161225A9D11900DAB7DA /* 123. 买卖股票的最佳时机 III.swift */,
				F8A5921725A2FD0E00F57560 /* 646. 最长数对链.swift */,
				F8A5923B25A31FB600F57560 /* 1614. 括号的最大嵌套深度.swift */,
				F8A5923E25A3342600F57560 /* 面试题 16.26. 计算器.swift */,
				F8A5924125A340E100F57560 /* 面试题 17.04. 消失的数字.swift */,
				F8A5924625A55BF100F57560 /* 399. 除法求值.swift */,
				F8C8F0FD25A6EF8F00E302FB /* 547. 省份数量.swift */,
				F8C8F10025A727BE00E302FB /* 396. 旋转函数.swift */,
				F8C8F10325A7306D00E302FB /* 477. 汉明距离总和.swift */,
				F8C8F10625A7F69000E302FB /* 29. 两数相除.swift */,
				F8C8F24225AC29E200E302FB /* 1202. 交换字符串中的元素.swift */,
				F855B60F25B13381006A9D06 /* 947. 移除最多的同行或同列石头 .swift */,
				81FD32C125AADD2400774231 /* 228. 汇总区间 .swift */,
				81FD32C425AF45DE00774231 /* 684. 冗余连接.swift */,
				F858707825B6792E00B670D7 /* 1584. 连接所有点的最小费用.swift */,
				81FD32C725B305D500774231 /* 803. 打砖块.swift */,
				81FD32CB25B4133300774231 /* 1232. 缀点成线.swift */,
				81C79DE025B4999100885FF1 /* 721. 账户合并.swift */,
				81C79DE325BA59AC00885FF1 /*  721. 账户合并.swift */,
				81C79E0625BC342200885FF1 /* 1319. 连通网络的操作次数.swift */,
				81C79E7525BD0A9200885FF1 /* 674. 最长连续递增序列.swift */,
				F858715325B6EA4800B670D7 /* 200. 岛屿数量.swift */,
				F858715825B7CA9500B670D7 /* 628. 三个数的最大乘积.swift */,
				F866E49225B964800076CE4E /* 1489. 找到最小生成树里的关键边和伪关键边.swift */,
				F866E68925BB1D260076CE4E /* 1283. 使结果不超过阈值的最小除数.swift */,
				F866E68C25BE63670076CE4E /* 959. 由斜杠划分区域.swift */,
				F866E68F25BFAED10076CE4E /* 1128. 等价多米诺骨牌对的数量.swift */,
				81313C3825C4654200179AE4 /* 1631. 最小体力消耗路径.swift */,
				F866E69325BFBF330076CE4E /* 1218. 最长定差子序列.swift */,
				F89419C625C104FA0045B201 /* 1579. 保证图可完全遍历.swift */,
				F842E8DB25C1996B00437C0D /* 671. 二叉树中第二小的节点.swift */,
				F874CED525C2BF18005B5FB8 /* 1033. 移动石子直到连续.swift */,
				81A7548B25C59DBA001EDE80 /* 778. 水位上升的泳池中游泳.swift */,
				81A7548E25C5CCB3001EDE80 /* 839. 相似字符串组.swift */,
				81A7549125C70DE9001EDE80 /* 888. 公平的糖果棒交换.swift */,
				812DC86E25DF6811000E5840 /* 1004. 最大连续1的个数 III .swift */,
				F874CF8F25C8EE37005B5FB8 /* 424. 替换后的最长重复字符.swift */,
				F880C05F25CE54A7000EE3CC /* 643. 子数组最大平均数 I .swift */,
				F880C06225CE56BB000EE3CC /* 1208. 尽可能使字符串相等.swift */,
				812DC87225DFC6DD000E5840 /* 566. 重塑矩阵.swift */,
				812DC87525DFD6C3000E5840 /* 561. 数组拆分 I.swift */,
				812DC87825E0DBA2000E5840 /* 697. 数组的度.swift */,
				81435BEA25E20DD800C751A2 /* 415. 字符串相加.swift */,
				81435BED25E2120300C751A2 /* 1389. 按既定顺序创建目标数组.swift */,
				8114AA6C25E3425900E33E42 /* 766. 托普利茨矩阵.swift */,
				819A1E3625E48298009D2511 /* 1052. 爱生气的书店老板.swift */,
				819A1E3925E5CAB8009D2511 /* 832. 翻转图像.swift */,
				81EAE67325E6B09A007DD010 /* 867. 转置矩阵.swift */,
				81EAE67625E86758007DD010 /* 1178. 猜字谜.swift */,
				81EAE67925EB905B007DD010 /* 896. 单调数列.swift */,
			);
			path = LeetCode;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		81C1FC3E239E1D6F00F2271B /* LeetCode */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 81C1FC46239E1D6F00F2271B /* Build configuration list for PBXNativeTarget "LeetCode" */;
			buildPhases = (
				81C1FC3B239E1D6F00F2271B /* Sources */,
				81C1FC3C239E1D6F00F2271B /* Frameworks */,
				81C1FC3D239E1D6F00F2271B /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LeetCode;
			productName = LeetCode;
			productReference = 81C1FC3F239E1D6F00F2271B /* LeetCode */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		81C1FC37239E1D6F00F2271B /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 1120;
				LastUpgradeCheck = 1240;
				ORGANIZATIONNAME = "李坤坤";
				TargetAttributes = {
					81C1FC3E239E1D6F00F2271B = {
						CreatedOnToolsVersion = 11.2;
					};
				};
			};
			buildConfigurationList = 81C1FC3A239E1D6F00F2271B /* Build configuration list for PBXProject "LeetCode" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 81C1FC36239E1D6F00F2271B;
			productRefGroup = 81C1FC40239E1D6F00F2271B /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				81C1FC3E239E1D6F00F2271B /* LeetCode */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		81C1FC3B239E1D6F00F2271B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				81FE1FAD24C34DC7001765E5 /* 826-安排工作以达到最大收益.swift in Sources */,
				81EAE67725E86758007DD010 /* 1178. 猜字谜.swift in Sources */,
				F858715925B7CA9500B670D7 /* 628. 三个数的最大乘积.swift in Sources */,
				F889CC6E25613FE00049C446 /* 15. 三数之和.swift in Sources */,
				F880C06025CE54A7000EE3CC /* 643. 子数组最大平均数 I .swift in Sources */,
				81E9F2442560304C00E2F4D7 /* 1122. 数组的相对排序.swift in Sources */,
				F8B9CC4825787C4A00C9696A /* 204. 计数质数 .swift in Sources */,
				811D6F6E256B28CA0034D56B /* 452. 用最少数量的箭引爆气球.swift in Sources */,
				8151A933258F9F7D004AF4DF /* 316. 去除重复字母.swift in Sources */,
				8126336825707102007749B8 /* 454. 四数相加 II.swift in Sources */,
				F8EDCF452589A0FD00913224 /* 290. 单词规律.swift in Sources */,
				81FF6F8623C2D2A800814D5B /* 74-搜索二维矩阵.swift in Sources */,
				81263365256F1E81007749B8 /* 164. 最大间距.swift in Sources */,
				F84D776A254ABDBD00CD31E0 /* 129. 求根到叶子节点数字之和.swift in Sources */,
				817CEAF52561FA9600105A26 /* 13. 罗马数字转整数.swift in Sources */,
				F8C8F0FE25A6EF8F00E302FB /* 547. 省份数量.swift in Sources */,
				81C79E7625BD0A9200885FF1 /* 674. 最长连续递增序列.swift in Sources */,
				81FD32CC25B4133300774231 /* 1232. 缀点成线.swift in Sources */,
				81EBE6072598DCFD00F8AAC0 /* 103. 二叉树的锯齿形层序遍历.swift in Sources */,
				8114AA6D25E3425900E33E42 /* 766. 托普利茨矩阵.swift in Sources */,
				F866E68A25BB1D260076CE4E /* 1283. 使结果不超过阈值的最小除数.swift in Sources */,
				81E60E8A23A088D500AAE3EA /* 89-格雷编码.swift in Sources */,
				81EAE67A25EB905B007DD010 /* 896. 单调数列.swift in Sources */,
				818EF0C5258BB3B60066399D /* 714. 买卖股票的最佳时机含手续费.swift in Sources */,
				818BEF4023A22B8200382977 /* 109-有序链表转换二叉搜索树.swift in Sources */,
				F858715425B6EA4800B670D7 /* 200. 岛屿数量.swift in Sources */,
				81FF6F4823B8B2A700814D5B /* 5296-两棵二叉搜索树中的所有元素.swift in Sources */,
				F8B0793625823AC0009B33C0 /* 207. 课程表.swift in Sources */,
				F889CC6B256108DD0049C446 /* 405. 数字转换为十六进制数 .swift in Sources */,
				81E1557A255222DB00FB7360 /* 57. 插入区间.swift in Sources */,
				F8A5924725A55BF100F57560 /* 399. 除法求值.swift in Sources */,
				F858707925B6792E00B670D7 /* 1584. 连接所有点的最小费用.swift in Sources */,
				F8AF4734256790330027B3EA /* 147. 对链表进行插入排序.swift in Sources */,
				813FAF7E25890E7D00892072 /* 738. 单调递增的数字.swift in Sources */,
				81E9F24B25603A7100E2F4D7 /* 516. 最长回文子序列.swift in Sources */,
				81EAE67425E6B09A007DD010 /* 867. 转置矩阵.swift in Sources */,
				81FD32C225AADD2400774231 /* 228. 汇总区间 .swift in Sources */,
				F8A5921825A2FD0E00F57560 /* 646. 最长数对链.swift in Sources */,
				81A54ED123B6663200EE2CCC /* 100-相同的树.swift in Sources */,
				81A54D9423A729F000EE2CCC /* 665-非递减数列.swift in Sources */,
				812DC86F25DF6811000E5840 /* 1004. 最大连续1的个数 III .swift in Sources */,
				F8B072E4258067E9009B33C0 /* 62. 不同路径.swift in Sources */,
				818BEF4923A377C700382977 /* 682-棒球比赛.swift in Sources */,
				81654A2D25366BDD00848BEF /* 1002. 查找常用字符.swift in Sources */,
				81A54EC723B5D5EA00EE2CCC /* 496-下一个更大元素 I.swift in Sources */,
				F866E68D25BE63670076CE4E /* 959. 由斜杠划分区域.swift in Sources */,
				8130A464259F79970076BC82 /* 605. 种花问题.swift in Sources */,
				F840C529254F9BBF008DDFC4 /* 349. 两个数组的交集.swift in Sources */,
				818BEF4723A363A500382977 /* 796-旋转字符串.swift in Sources */,
				F8B072DB257F1893009B33C0 /* 842. 将数组拆分成斐波那契序列.swift in Sources */,
				81EBE60A259DE02E00F8AAC0 /* 435. 无重叠区间.swift in Sources */,
				81A54DC623A9D53C00EE2CCC /* 309-最佳买卖股票时机含冷冻期.swift in Sources */,
				81C79E0725BC342200885FF1 /* 1319. 连通网络的操作次数.swift in Sources */,
				817CEAF8256417DD00105A26 /* 1030. 距离顺序排列矩阵单元格.swift in Sources */,
				813515B225A3758E00DAB7DA /* 830. 较大分组的位置.swift in Sources */,
				81654A2A25351C3400848BEF /* 24. 两两交换链表中的节点.swift in Sources */,
				F855B61025B13381006A9D06 /* 947. 移除最多的同行或同列石头 .swift in Sources */,
				F8F870FC2547BE2E0040A8B0 /* 144. 二叉树的前序遍历.swift in Sources */,
				F8C8F24325AC29E200E302FB /* 1202. 交换字符串中的元素.swift in Sources */,
				81A54EC323B4577500EE2CCC /* 84-柱状图中最大的矩形.swift in Sources */,
				81A54D9823A8752D00EE2CCC /* 6-Z 字形变换.swift in Sources */,
				81FD32C525AF45DE00774231 /* 684. 冗余连接.swift in Sources */,
				811D6F72256C78A00034D56B /* 222. 完全二叉树的节点个数.swift in Sources */,
				817CEAF22561F7DB00105A26 /* 12. 整数转罗马数字.swift in Sources */,
				F8896D19255CEBED008E131D /* 922. 按奇偶排序数组 II.swift in Sources */,
				F8B0756A2581BBBF009B33C0 /* 860. 柠檬水找零.swift in Sources */,
				F8AF49D0256B46EF0027B3EA /* 34. 在排序数组中查找元素的第一个和最后一个位置.swift in Sources */,
				F866E69425BFBF330076CE4E /* 1218. 最长定差子序列.swift in Sources */,
				81C9AAB12533D33A0007C839 /* 530. 二叉搜索树的最小绝对差.swift in Sources */,
				81949E0D24D7B7AB00823823 /* 1041-困于环中的机器人.swift in Sources */,
				81435BEE25E2120300C751A2 /* 1389. 按既定顺序创建目标数组.swift in Sources */,
				F866E49325B964800076CE4E /* 1489. 找到最小生成树里的关键边和伪关键边.swift in Sources */,
				F8C8F10425A7306D00E302FB /* 477. 汉明距离总和.swift in Sources */,
				81A54ED323B70F6A00EE2CCC /* 60-第k个排列.swift in Sources */,
				F8F872A7254908C20040A8B0 /* 1207. 独一无二的出现次数.swift in Sources */,
				81A54E8D23B05E2000EE2CCC /* 5291- 统计位数为偶数的数字.swift in Sources */,
				81A54ECB23B6607E00EE2CCC /* 88-合并两个有序数组.swift in Sources */,
				81FF6F4623B8B04C00814D5B /* 5295-和为零的N个唯一整数.swift in Sources */,
				F8B0724A257DC6B5009B33C0 /* 861. 翻转矩阵后的得分.swift in Sources */,
				81A54EB823B1DD6A00EE2CCC /* 494-目标和.swift in Sources */,
				F8C8F10725A7F69000E302FB /* 29. 两数相除.swift in Sources */,
				F8AB679B2553FAAA005D0EC4 /* 127. 单词接龙.swift in Sources */,
				F842E8DC25C1996B00437C0D /* 671. 二叉树中第二小的节点.swift in Sources */,
				817CEAEF2561E2D400105A26 /* 406. 根据身高重建队列.swift in Sources */,
				812DC87625DFD6C3000E5840 /* 561. 数组拆分 I.swift in Sources */,
				F8B0756725811494009B33C0 /* 63. 不同路径 II.swift in Sources */,
				F880C06325CE56BB000EE3CC /* 1208. 尽可能使字符串相等.swift in Sources */,
				818BEF4523A33E2200382977 /* 889-根据前序和后序遍历构造二叉树.swift in Sources */,
				81A54E3823AB508000EE2CCC /* 977-有序数组的平方.swift in Sources */,
				81E9F6AE2558BEF500B1F198 /* 973. 最接近原点的 K 个点.swift in Sources */,
				81A54E8723B05DAE00EE2CCC /* 413-等差数列划分.swift in Sources */,
				81C1FC4B239E205E00F2271B /* 31-下一个排列.swift in Sources */,
				F889CBA82560CE720049C446 /* 402. 移掉K位数字.swift in Sources */,
				8135161325A9D11900DAB7DA /* 123. 买卖股票的最佳时机 III.swift in Sources */,
				81BF2CEF254B8D3A00F2E47E /* 463. 岛屿的周长.swift in Sources */,
				F8B071E3257CCC2A009B33C0 /* 118. 杨辉三角.swift in Sources */,
				8130A467259F8C7D0076BC82 /* 239. 滑动窗口最大值.swift in Sources */,
				81C1FC43239E1D6F00F2271B /* main.swift in Sources */,
				F8AF47632568C3990027B3EA /* 148. 排序链表.swift in Sources */,
				81C79DE425BA59AC00885FF1 /*  721. 账户合并.swift in Sources */,
				F8AB690725554A26005D0EC4 /* 1356. 根据数字二进制下 1 的数目排序.swift in Sources */,
				81A54EC123B4490E00EE2CCC /* 1104-二叉树寻路.swift in Sources */,
				F8A5924225A340E100F57560 /* 面试题 17.04. 消失的数字.swift in Sources */,
				819A1E3A25E5CAB8009D2511 /* 832. 翻转图像.swift in Sources */,
				81EBE6002598D01A00F8AAC0 /* 85. 最大矩形.swift in Sources */,
				812DC87925E0DBA2000E5840 /* 697. 数组的度.swift in Sources */,
				81FE1FAB24C13933001765E5 /* 35-搜索插入位置.swift in Sources */,
				81FF6F4A23B8BEC000814D5B /* 5297-跳跃游戏 III.swift in Sources */,
				81313C3925C4654200179AE4 /* 1631. 最小体力消耗路径.swift in Sources */,
				81263362256DCBF5007749B8 /* 1370. 上升下降字符串.swift in Sources */,
				817CEAFE2565DC4500105A26 /* 283. 移动零.swift in Sources */,
				81C79DE125B4999100885FF1 /* 721. 账户合并.swift in Sources */,
				F8209E202590C68600BB4A3B /* 746. 使用最小花费爬楼梯.swift in Sources */,
				81A54E3C23AC5F4E00EE2CCC /* 322-零钱兑换.swift in Sources */,
				81FF6F4C23B9938500814D5B /* 673-最长递增子序列的个数.swift in Sources */,
				81A54E3423AB154F00EE2CCC /* 303-区域和检索 - 数组不可变.swift in Sources */,
				81FF6F5B23BDBAEB00814D5B /* 724-寻找数组的中心索引.swift in Sources */,
				F874CED625C2BF18005B5FB8 /* 1033. 移动石子直到连续.swift in Sources */,
				818BEF3C23A1EF6E00382977 /* 1169-查询无效交易.swift in Sources */,
				81FF6F5623BC5BE300814D5B /* 130-被围绕的区域.swift in Sources */,
				81A54ECF23B662A500EE2CCC /* 删除链表中等于某个值得所有节点.swift in Sources */,
				81A54E8923B05DCB00EE2CCC /* 5293-子串的最大出现次数.swift in Sources */,
				81A7548F25C5CCB3001EDE80 /* 839. 相似字符串组.swift in Sources */,
				818BEF3E23A22B5600382977 /* Common.swift in Sources */,
				81A54EBC23B346D900EE2CCC /* 486-预测赢家.swift in Sources */,
				81E1555F2550D81F00FB7360 /* 941. 有效的山脉数组.swift in Sources */,
				81BD50B823A5C490008B2278 /* 205-同构字符串.swift in Sources */,
				81FF6F4E23BAE70100814D5B /* 967-连续差相同的数字.swift in Sources */,
				817CEAFB256498FC00105A26 /* 134. 加油站 .swift in Sources */,
				811D6F6B256A62920034D56B /* 242. 有效的字母异位词.swift in Sources */,
				81A54E8B23B05E0200EE2CCC /* 5292-划分数组为连续数字的集合.swift in Sources */,
				81A54ECD23B6626A00EE2CCC /* 167-两数之和 II - 输入有序数组.swift in Sources */,
				F89419C725C104FA0045B201 /* 1579. 保证图可完全遍历.swift in Sources */,
				F8B9C9092574997500C9696A /* 976. 三角形的最大周长.swift in Sources */,
				812DC87325DFC6DD000E5840 /* 566. 重塑矩阵.swift in Sources */,
				81FF6F5923BD90A600814D5B /* 905-按奇偶排序数组.swift in Sources */,
				F8209DBA258DD08000BB4A3B /* 48. 旋转图像.swift in Sources */,
				F8A49034255E30DD0045DD43 /* 328. 奇偶链表.swift in Sources */,
				81A7549225C70DE9001EDE80 /* 888. 公平的糖果棒交换.swift in Sources */,
				819A1E3725E48298009D2511 /* 1052. 爱生气的书店老板.swift in Sources */,
				81435BEB25E20DD800C751A2 /* 415. 字符串相加.swift in Sources */,
				81BF2CBE254642B500F2E47E /* 1365. 有多少小于当前数字的数字.swift in Sources */,
				F8B9CC3D25772B9400C9696A /* 321. 拼接最大数.swift in Sources */,
				F874CF9025C8EE37005B5FB8 /* 424. 替换后的最长重复字符.swift in Sources */,
				81650D21239F43E400580543 /* 621-任务调度器.swift in Sources */,
				F8209DB1258CDFE100BB4A3B /* 389. 找不同.swift in Sources */,
				816209402557F992000C31B0 /* 122. 买卖股票的最佳时机 II.swift in Sources */,
				816F1B9E254D797700D0EE5D /* 381. O(1) 时间插入、删除和获取随机元素 - 允许重复.swift in Sources */,
				F8F11DA22579311E00ADCCD1 /* 813. 最大平均值和的分组.swift in Sources */,
				81A54E5E23ADC6FF00EE2CCC /* 304-二维区域和检索 - 矩阵不可变.swift in Sources */,
				F8A5920B25A2E84B00F57560 /* 641. 设计循环双端队列.swift in Sources */,
				81FD32C825B305D500774231 /* 803. 打砖块.swift in Sources */,
				F866E69025BFAED10076CE4E /* 1128. 等价多米诺骨牌对的数量.swift in Sources */,
				81A54E3623AB502C00EE2CCC /* 876-链表的中间结点.swift in Sources */,
				81FF6F8423C2D0DF00814D5B /* 504-七进制数.swift in Sources */,
				81A54EC923B5DB1700EE2CCC /* 排序.swift in Sources */,
				818A1C052583C9E300692E2A /* 649. Dota2 参议院.swift in Sources */,
				F8C8F10125A727BE00E302FB /* 396. 旋转函数.swift in Sources */,
				81A54EC523B5A70E00EE2CCC /* 42-接雨水.swift in Sources */,
				81A54E3A23AB56B200EE2CCC /* 238-除自身以外数组的乘积.swift in Sources */,
				F8AF47602567E58B0027B3EA /* 1324. 竖直打印单词.swift in Sources */,
				8151A93B2594E17D004AF4DF /* 135. 分发糖果.swift in Sources */,
				81A54E6023ADF5BA00EE2CCC /* 213-打家劫舍 II.swift in Sources */,
				F8AF49CC256910B30027B3EA /* 22. 括号生成.swift in Sources */,
				81A54D9623A745B500EE2CCC /* 4-寻找两个有序数组的中位数.swift in Sources */,
				81A54EBE23B3484F00EE2CCC /* 1137-第 N 个泰波那契数.swift in Sources */,
				F8A5923F25A3342600F57560 /* 面试题 16.26. 计算器.swift in Sources */,
				81E9F2482560345300E2F4D7 /* 515. 在每个树行中找最大值.swift in Sources */,
				81A7548C25C59DBA001EDE80 /* 778. 水位上升的泳池中游泳.swift in Sources */,
				F8B9C906257490AD00C9696A /* 767. 重构字符串.swift in Sources */,
				81FF6F8223C2CC5800814D5B /* 657-机器人能否返回原点.swift in Sources */,
				F8A5923C25A31FB600F57560 /* 1614. 括号的最大嵌套深度.swift in Sources */,
				81FF6F5D23BDCD7500814D5B /* 1093-大样本统计.swift in Sources */,
				81EBE6042598DA8E00F8AAC0 /* 659. 分割数组为连续子序列.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		81C1FC44239E1D6F00F2271B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		81C1FC45239E1D6F00F2271B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
			};
			name = Release;
		};
		81C1FC47239E1D6F00F2271B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_IDENTITY = "-";
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		81C1FC48239E1D6F00F2271B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_IDENTITY = "-";
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		81C1FC3A239E1D6F00F2271B /* Build configuration list for PBXProject "LeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				81C1FC44239E1D6F00F2271B /* Debug */,
				81C1FC45239E1D6F00F2271B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		81C1FC46239E1D6F00F2271B /* Build configuration list for PBXNativeTarget "LeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				81C1FC47239E1D6F00F2271B /* Debug */,
				81C1FC48239E1D6F00F2271B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 81C1FC37239E1D6F00F2271B /* Project object */;
}
